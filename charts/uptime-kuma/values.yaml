# Default values for uptime-kuma.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  registry: "quay.io"
  repository: "k3rnel-pan1c/uptime-kuma"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the Chart's appVersion.
  tag: "@sha256:600aefa19dd7ce16feb3cf5098a2efba68db1c49003de0b11564379b789a7878"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

commonLabels: {}

statefulSet:
  labels: {}
  annotations: {}
  # statefulSet.envVars you can add some app env here.
  # more env vars see: https://github.com/louislam/uptime-kuma/wiki/Environment-Variables
  envVars: []
  # Example for using Mariadb (needs version 2.0.0+): 
  # ################################################
  # envVars:
  #   - name: UPTIME_KUMA_ENABLE_EMBEDDED_MARIADB
  #     value: "1"
  #   - name: UPTIME_KUMA_DB_TYPE
  #     value: "mariadb"
  #   - name: UPTIME_KUMA_DB_HOSTNAME
  #     value: "127.0.0.1"
  #   - name: UPTIME_KUMA_DB_PORT
  #     value: "3306"
  #   - name: UPTIME_KUMA_DB_NAME
  #     value: "uptime-kuma"
  #   - name: UPTIME_KUMA_DB_USERNAME
  #     value: "username"
  #   - name: UPTIME_KUMA_DB_PASSWORD
  #     value: "p@ssw0rd"

  # Example for Change UID & GID:
  # ############################
  # envVars:
  #   - name: "PUID"
  #     value: "1001"
  #   - name: "PGID"
  #     value: "1002"
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

livenessProbe:
  exec:
    command:
      - extra/healthcheck

readinessProbe:
  httpGet:
    path: /
    port: http
    scheme: HTTP

service:
  type: ClusterIP
  port: 80

route:
  enabled: false
  annotations: {}
  host: ""
  labels: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 200m
  #   memory: 256Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

persistence:
  enabled: false
  claimNameOverwrite: ""
  sizeLimit: 4Gi
  storageClass: ""
  annotations: {}
  labels: {}

nodeSelector: {}

tolerations: []

affinity: {}

serviceMonitor:
  enabled: false
  authentication:
    enabled: true
    username: <username>
    password: <token>
    existingSecret: ""
    existingSecretUsernameKey: username
    existingSecretPasswordKey: token

testPod:
  image: docker.io/busybox@sha256:f85340bf132ae937d2c2a763b8335c9bab35d6e8293f70f606b9c6178d84f42b
  annotations: {}

extraCertificates:
  enabled: false
  cacerts: ""
  existingConfigMap: ""
  existingConfigMapKey: cacerts.pem
